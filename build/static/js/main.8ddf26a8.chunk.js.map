{"version":3,"sources":["components/LinkCard/LinkCard.js","components/pages/Home/Home.js","components/pages/Artists/Artists.js","components/pages/Releases/Releases.js","components/pages/Events/Events.js","components/Appbar/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["LinkCard","react_default","a","createElement","id","Paper","this","props","className","title","desc","Container","Button","variant","button","href","React","Component","color","window","onload","headerbg","document","querySelectorAll","i","length","style","background","Math","floor","random","Home","Grid","container","item","xs","src","alt","components_LinkCard_LinkCard","pagebg","Artists","state","city","artists","onSubmit","event","preventDefault","axios","get","_this","then","res","console","log","setState","data","arr","sort","value","_this2","Fragment","Search_default","onClick","type","name","ref","input","placeholder","md","map","key","spacing","avatar_url","sm","direction","Typography","gutterBottom","username","followers_count","track_count","playlist_count","reposts_count","description","permalink_url","target","spotifyApi","require","clientId","clientSecret","setAccessToken","Releases","newReleases","getNewReleases","limit","offset","country","body","albums","items","err","xlg","Card","Tooltip","placement","external_urls","spotify","rel","images","url","album_type","total_tracks","release_date","Events","events","_embedded","dates","start","localDate","localTime","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","cloneElement","elevation","SimpleAppBar","CssBaseline","AppBar","Toolbar","react_router_dom","to","App","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ddf26a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Paper, Button, Container} from '@material-ui/core';\r\nimport './LinkCard.css'\r\n\r\n\r\nclass LinkCard extends React.Component {\r\n  render () {\r\n    return (\r\n    <div id=\"root\">\r\n        <Paper id={this.props.id}>\r\n            <h3 className=\"title\">{this.props.title}</h3>\r\n            <h4 className=\"description\">{this.props.desc}</h4>\r\n            <Container>\r\n            <Button variant=\"contained\" id={this.props.button} href={this.props.href}>Get Started</Button>\r\n            </Container>\r\n        </Paper> \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default LinkCard;","import React from \"react\";\r\nimport {Grid, Container } from '@material-ui/core';\r\nimport './Home.css'\r\nimport LinkCard from '../../LinkCard/LinkCard'\r\n\r\n\r\n//Load a different color header each time\r\nvar color = ['#9dabdd', '#ef8b880', '#ecbe7a', '#70ae98', '#f6a7c1', '#bc85a3', '#fdcf76', '#89aeb2', '#97f2f3', '#e7cfc8', '#c1cd97', '#5e96ae', '#38908f', '#fead89', '#e6b655', '#ca7e8d', '#2e8364', '#d7e7a9', '#c3e4fd', '#e18d96', '#f2cf59'];\r\nwindow.onload = function () {\r\n    var headerbg = document.querySelectorAll(\".header-bg\");\r\n    for (var i = 0; i < headerbg.length; i++) {\r\n        headerbg[i].style.background = color[Math.floor(Math.random() * color.length)]\r\n    }\r\n}\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Grid container id=\"grid-container\">\r\n                <div className=\"header-bg\"></div>\r\n                <Grid item xs={6}>\r\n                    <h1 id=\"header\">Keep an Ear To The <a id=\"header\" className=\"font-effect-outline\">Streets.</a></h1>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <img id=\"streetsImg\" src=\"https://images.unsplash.com/photo-1549212197-3b55788f1bf2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=751&q=80\" alt=\"streets\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container id=\"grid-container\">\r\n                <Grid item xs={12}>\r\n                    <h1 id=\"get-started\">Get Started</h1>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Container>\r\n                    <h2 id=\"about-us\">About Us</h2>\r\n                    </Container>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Container>\r\n                    <p className=\"about-us-content\">Streets is a place dedicated to helping you find local musicians and music events.</p>\r\n                    <p className=\"about-us-content\">With the resources of SoundCloud, Spotify, and EventBrite you can find your new favorite artist by searching your city or the artist directly.</p>\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <Grid container id=\"card-grid-container\">\r\n                    <Grid item xs>\r\n                        <LinkCard id=\"artists\" href=\"/artists\" title=\"Artists\" desc=\"Search for up to 200 SoundCloud artists in any given city at a time by entering either a city name or the artist name.\" button=\"artistsbtn\">\r\n                        </LinkCard>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <LinkCard id=\"events\" href=\"/events\" title=\"Events\" desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque velit, lobortis ut magna\" button=\"eventsbtn\">\r\n                        </LinkCard>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <LinkCard id=\"playlists\" href=\"/releases\" title=\"New Releases\" desc=\"Discover new projects and artists. Browse the 50 most recent releases from Spotify.\" button=\"playlistsbtn\">                             \r\n                         </LinkCard>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Artists.css';\r\n\r\n//Function for Shuffling \r\nfunction shuffle(array) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  //Load a different color header each time\r\nvar color = ['#9dabdd', '#ef8b880', '#ecbe7a', '#70ae98', '#f6a7c1', '#bc85a3', '#fdcf76', '#89aeb2', '#97f2f3', '#e7cfc8', '#c1cd97', '#5e96ae', '#38908f', '#fead89', '#e6b655', '#ca7e8d', '#2e8364', '#d7e7a9', '#c3e4fd', '#e18d96', '#f2cf59'];\r\nwindow.onload = function () {\r\n    var pagebg = document.querySelectorAll(\".page-bg\");\r\n    for (var i = 0; i < pagebg.length; i++) {\r\n        pagebg[i].style.background = color[Math.floor(Math.random() * color.length)]\r\n    }\r\n}\r\n\r\nexport default class Artists extends React.Component {\r\n    state = {\r\n        city: \"\",\r\n        artists: [],\r\n    }\r\n\r\n    //Taking In User Input And Giving API Results\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        axios.get('http://api.soundcloud.com/users?q=' + this.state.city +'&client_id=95f22ed54a5c297b1c41f72d713623ef&limit=200')\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({ city: city, artists: res.data, });\r\n            //Shuffling The Artists Array in State So User Doesn't Get Same Results Each Time\r\n            let arr = this.state.artists;\r\n            shuffle(arr);\r\n            //Resetting State To Shuffled Array\r\n            this.setState({city: city, artists: arr});\r\n        });\r\n        const city = this.city.value;\r\n       };      \r\n\r\n    // componentDidMount() {\r\n    //     axios.get('http://api.soundcloud.com/users?q=' + this.state.city +'&client_id=95f22ed54a5c297b1c41f72d713623ef&limit=200')\r\n    //         .then(res => {\r\n    //            console.log(res);\r\n    //         });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n            <React.Fragment>\r\n\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <div className=\"page-bg\"></div>\r\n                        <h2 className=\"page-header\">Search Local <a id=\"page-header\" className=\"font-effect-outline\">Artists.</a></h2>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid xs={12}id=\"formGrid\">\r\n                    <Paper className=\"paper\" id=\"formpaper\">\r\n                    <SearchIcon id=\"searchIcon\" onClick={this.onSubmit}/>\r\n                <form onSubmit={this.onSubmit} id=\"search-form\">\r\n                <input type=\"text\" name=\"city-input\" ref={input => this.city = input} onSubmit={this.onSubmit} id=\"city-input\" placeholder=\"Search City or Artist (ex. Charlotte, North Carolina or J. Cole)\"/>\r\n                </form>\r\n                <h3 className=\"city-display\">Showing {this.state.artists.length} results for: {this.state.city} from SoundCloud</h3>\r\n                </Paper>\r\n                </Grid>\r\n\r\n            <Grid container item xs={12} md={9} id=\"artistGrid\">\r\n            {this.state.artists.map(artists =>\r\n            <div className=\"artistCard\" item xs={12} key={artists.id}>\r\n                <Paper className=\"paper\" id=\"artistpaper\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} id=\"image-section\">\r\n                            <div className =\"imageHolder\">\r\n                                <img className=\"img\" alt=\"avatar\" src={artists.avatar_url} />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm container>\r\n                            <Grid item xs container direction=\"column\" spacing={2}>\r\n                                <Grid item xs>\r\n                                    <Typography gutterBottom variant=\"subtitle1\" id=\"userName\">\r\n                                        {artists.username}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" gutterBottom id=\"city\">\r\n                                        City: {artists.city}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" id=\"followers\">\r\n                                        Followers: {artists.followers_count}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" id=\"trackCount\">\r\n                                        Track Count: {artists.track_count}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" id=\"playListCount\">\r\n                                        Playlist Count: {artists.playlist_count}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" id=\"repostCount\">\r\n                                        Reposts Count: {artists.reposts_count}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography className=\"description\">\r\n                                        {artists.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography>\r\n                                    <Button variant=\"contained\" id=\"soundCloudButton\" href={artists.permalink_url} target=\"_blank\">\r\n                                        SoundCloud\r\n                                    </Button>\r\n                                </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>)}\r\n            </Grid>\r\n\r\n            </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Grid, Card, Container, Tooltip  } from '@material-ui/core';\r\nimport './Releases.css'\r\n\r\n//Spotfy Variables for API\r\nvar SpotifyWebApi = require('spotify-web-api-node');\r\nvar spotifyApi = new SpotifyWebApi({\r\n  clientId: '93e8b37320b4480e8cd2ab1f94655935',\r\n  clientSecret: 'd5e53be2a8884da3830220ca784a8129',\r\n});\r\n\r\nspotifyApi.setAccessToken('BQC1cyjqWGdn2JaFqFTCnNKr9yWjUilArA_mKPpCcHMRlT2w31_UvV5hczARV88bBjgFUrRrIDJJedIkDD5fPqFuH_3BxWbtLQx_50pdKP__789aX6-6C2xjQ5GlNDhOytQbHitr4tQIulWn9y8');\r\n\r\n\r\nexport default class Releases extends React.Component {\r\n  state = {\r\n    newReleases: [],\r\n}\r\n\r\ncomponentDidMount() {\r\n// Retrieve new releases\r\nspotifyApi.getNewReleases({ limit : 50, offset: 0, country: 'US' })\r\n.then(res => {\r\n  console.log(res.body.albums.items);\r\n  this.setState({newReleases: res.body.albums.items})\r\n  }, function(err) {\r\n     console.log(\"Something went wrong!\", err);\r\n  });\r\n}\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n                {/*Header*/}\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <div className=\"page-bg\"></div>\r\n                        <h2 className=\"page-header\">New <a id=\"page-header\" className=\"font-effect-outline\">Releases.</a></h2>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/*Grid of all new releases*/}\r\n                <Grid container id=\"newReleasesGrid\">\r\n                  {/*Creating A Card For Each Newly Released Project*/}\r\n                {this.state.newReleases.map(newReleases =>\r\n\r\n                <Grid item xs={12} sm={6} md={4} xlg={3} key={newReleases.id}>\r\n                  <Card id=\"newReleaseCard\">\r\n\r\n                    {/*Name of artist with link to Spotify of artist*/}\r\n                    <Container id=\"nameOfArtistDiv\">\r\n                    <Tooltip title=\"Go To Artist's Spotify\" placement=\"top\">\r\n                      <a href={newReleases.artists[0].external_urls.spotify} target='_blank' rel=\"noopener noreferrer\" className=\"nameOfArtist\">{newReleases.artists[0].name}</a>\r\n                      </Tooltip>\r\n                    </Container>\r\n\r\n                    {/*Name of project with link to Spotify*/}\r\n                    <Container id=\"nameOfAlbumDiv\">\r\n                      <Tooltip title=\"Go To Album on Spotify\" placement=\"bottom\">\r\n                      <a href={newReleases.external_urls.spotify} target='_blank' rel=\"noopener noreferrer\" className=\"nameOfAlbum\">{newReleases.name}</a>\r\n                      </Tooltip>\r\n                    </Container>\r\n\r\n                    {/*Cover Art*/}\r\n                    <Container id=\"coverArtDiv\">\r\n                      <a href={newReleases.external_urls.spotify} target='_blank' rel=\"noopener noreferrer\">\r\n                        <img src={newReleases.images[0].url} alt=\"coverArt\" className=\"coverArt\"/>\r\n                        </a>\r\n                    </Container>\r\n\r\n                    {/*Displaying what type of proejct, how many tracks, and release date*/}\r\n                    <Container id=\"releaseInfo\">\r\n                      {newReleases.album_type}\r\n                      <br/>                    \r\n                      Tracks: {newReleases.total_tracks}\r\n                      <br/>\r\n                      Released: {newReleases.release_date}\r\n                      <br/> \r\n                    </Container>\r\n\r\n                      </Card>            \r\n                    </Grid>\r\n                    )}\r\n                </Grid>\r\n\r\n\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//Function for Shuffling \r\nfunction shuffle(array) {\r\n  array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nexport default class Events extends React.Component {\r\n  state = {\r\n    events: [],\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n    axios.get('https://app.ticketmaster.com/discovery/v2/events?classificationName=music&city=charlotte&apikey=65F2hj7ogdGjWYGHFTsbgI4vFJE9J6vQ')\r\n        .then(res => {\r\n           console.log(res.data._embedded.events);\r\n           this.setState({events: res.data._embedded.events});\r\n           //Shuffling The Events Array in State So User Doesn't Get Same Results Each Time\r\n           let arr = this.state.events;\r\n           shuffle(arr);\r\n           //Resetting State To Shuffled Array\r\n           this.setState({events: arr});\r\n        });\r\n}\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <div className=\"page-bg\"></div>\r\n                        <h2 className=\"page-header\">Search Local <a id=\"page-header\" className=\"font-effect-outline\">Events.</a></h2>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    {this.state.events.map(events =>\r\n\r\n                    <div>\r\n                      {events.name}\r\n                      <br/>\r\n                      {events.dates.start.localDate}\r\n                      <br/>\r\n                      {events.dates.start.localTime}\r\n                      <br/>\r\n                      \r\n\r\n                    </div> )}\r\n                    </Grid>\r\n                </Grid>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Appbar.css'\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\n\r\nexport default function SimpleAppBar(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ElevationScroll {...props}>\r\n        <AppBar id=\"appBar\">\r\n          <Toolbar>\r\n            <Typography variant=\"h5\"><Link to=\"/\" id=\"name\">STREETS</Link></Typography>\r\n            <Typography variant=\"h5\" id=\"slash\">/</Typography>\r\n            <Typography variant=\"h5\" id=\"links\"><Link to=\"/Artists\" id=\"appBarATag\">Artists</Link></Typography>\r\n            <Typography variant=\"h5\" id=\"slash\">/</Typography>\r\n            <Typography variant=\"h5\" id=\"links\"><Link to=\"/Events\" id=\"appBarATag\">Events</Link></Typography>\r\n            <Typography variant=\"h5\" id=\"slash\">/</Typography>\r\n            <Typography variant=\"h5\" id=\"links\"><Link to=\"/Releases\" id=\"appBarATag\">New Releases</Link></Typography> \r\n          </Toolbar>    \r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Toolbar />\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Home from './components/pages/Home/Home';\nimport Artists from './components/pages/Artists/Artists';\nimport Releases from './components/pages/Releases/Releases';\nimport Events from './components/pages/Events/Events';\nimport SimpleAppBar from './components/Appbar/Appbar';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <SimpleAppBar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Artists\" component={Artists} />\n        <Route exact path=\"/Events\" component={Events} />\n        <Route exact path=\"/Releases\" component={Releases} />\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}